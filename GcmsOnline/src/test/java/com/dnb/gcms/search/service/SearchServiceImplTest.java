///*
// * This file is auto generated by Cognizant TestRobot
// * Thu Oct 12 16:56:44 IST 2017
// * **/
// 
//
//package com.dnb.gcms.search.service;
//
//import static org.junit.Assert.assertNotNull;
//import static org.junit.Assert.assertNull;
//import static org.mockito.Matchers.any;
//import static org.mockito.Matchers.anyShort;
//import static org.mockito.Matchers.anyString;
//import static org.mockito.Mockito.doReturn;
//import static org.mockito.Mockito.doThrow;
//import static org.mockito.Mockito.mock;
//import static org.mockito.Mockito.times;
//import static org.mockito.Mockito.verify;
//
//import java.util.ArrayList;
//import java.util.Base64;
//import java.util.Base64.Encoder;
//
//import org.json.JSONException;
//import org.json.JSONObject;
//import org.junit.Before;
//import org.junit.Rule;
//import org.junit.Test;
//import org.powermock.api.mockito.PowerMockito;
//import org.powermock.core.classloader.annotations.PrepareForTest;
//import org.powermock.modules.agent.PowerMockAgent;
//import org.powermock.modules.junit4.rule.PowerMockRule;
//import org.springframework.boot.web.client.RestTemplateBuilder;
//import org.springframework.http.HttpEntity;
//import org.springframework.http.HttpMethod;
//import org.springframework.http.ResponseEntity;
//import org.springframework.web.client.RestTemplate;
//
//import com.dnb.gcms.common.domain.CompanyDirectPlus;
//import com.dnb.gcms.common.domain.DunsSearchInfo;
//import com.dnb.gcms.common.domain.Organization;
//import com.dnb.gcms.common.domain.SearchCandidates;
//import com.dnb.gcms.util.FormatterTool;
//
////@SuppressStaticInitializationFor({<comma-separated fully qualified class names in double quotes>})
//@PrepareForTest({RestTemplateBuilder.class,Base64.Encoder.class,Base64.class,HttpEntity.class,JSONObject.class,Encoder.class,RestTemplate.class,FormatterTool.class,SearchServiceImpl.class,DunsSearchInfo.class})
//public class SearchServiceImplTest {
//
//  @Rule
//  public PowerMockRule rule = new PowerMockRule();
//
//  RestTemplate restTemplate0  = null;
//  RestTemplateBuilder restTemplateBuilder0  = null;
//  SearchServiceImpl searchServiceImpl0  = null;
//
//  @Before
//  public void setUp() throws Exception  {
//      PowerMockAgent.initializeIfNeeded();
//      restTemplate0 = mock(RestTemplate.class);
//      restTemplateBuilder0 = mock(RestTemplateBuilder.class);
//      doReturn(restTemplate0).when(restTemplateBuilder0).build();
//      searchServiceImpl0 = new SearchServiceImpl(restTemplateBuilder0);
//  }
//
//    //***Test case for path 1.2
//     //
//  @Test
//  public void getSearchResultTest0()  throws Throwable  {
//      Base64.Encoder base64_Encoder0 = mock(Base64.Encoder.class);
//      PowerMockito.mockStatic(Base64.class);
//      PowerMockito.when(Base64.getEncoder()).thenReturn(base64_Encoder0);
//      
//      String string0 = "";
//      doReturn(string0).when(base64_Encoder0).encodeToString(any(byte[].class));
//      HttpEntity httpEntity0 = PowerMockito.mock(HttpEntity.class);
//      PowerMockito.whenNew(HttpEntity.class).withAnyArguments().thenReturn(httpEntity0);
//      ResponseEntity<String> result =mock(ResponseEntity.class);
//      ResponseEntity<CompanyDirectPlus> searchResponseJson =mock(ResponseEntity.class);
//      CompanyDirectPlus companyDirect = mock(CompanyDirectPlus.class);
//      doReturn(companyDirect).when(searchResponseJson).getBody();
//      ArrayList<SearchCandidates> arrayList0=new ArrayList<SearchCandidates>();
//      SearchCandidates src=mock(SearchCandidates.class);
//      Organization org=mock(Organization.class);
//      doReturn(org).when(src).getOrganization();
//      doReturn("").when(org).getDuns();
//      doReturn("").when(org).getPrimaryName();
//      arrayList0.add(src);
//      doReturn(arrayList0).when(companyDirect).getSearchCandidates();
//      PowerMockito.doReturn(result,searchResponseJson).when(restTemplate0).exchange(anyString(), any(HttpMethod.class),any(HttpEntity.class),(Class<?>)any(Class.class));
//      
//      JSONObject jSONObject0 = PowerMockito.mock(JSONObject.class);
//      PowerMockito.whenNew(JSONObject.class).withAnyArguments().thenReturn(jSONObject0);
//      
//      String string1 = "";
//      doReturn(string1).when(jSONObject0).getString(anyString());
//      HttpEntity httpEntity1 = PowerMockito.mock(HttpEntity.class);
//      PowerMockito.whenNew(HttpEntity.class).withAnyArguments().thenReturn(httpEntity1);
//      
//      //Unable to create mock for r0rj421m3d1y.DecimalFormat(String FORMAT_DECIMAL_TO_STRING)
//      
//      FormatterTool formatterTool0 = PowerMockito.mock(FormatterTool.class);
//      PowerMockito.whenNew(FormatterTool.class).withNoArguments().thenReturn(formatterTool0);
//      
//      DunsSearchInfo dunsSearchInfo0 = PowerMockito.mock(DunsSearchInfo.class);
//      PowerMockito.whenNew(DunsSearchInfo.class).withNoArguments().thenReturn(dunsSearchInfo0);
//      
//      String string2 = "";
//      doReturn(string2).when(formatterTool0).formatDecimalToString(any(java.lang.Number.class));
//      
//      // Invoke method under test
//      DunsSearchInfo dunsSearchInfo1 = searchServiceImpl0.getSearchResult("20886");
//      assertNotNull(dunsSearchInfo1);
//      
//      assertNull(dunsSearchInfo1.getCompanyName());
//      assertNotNull(dunsSearchInfo1);
//      
//      assertNotNull(dunsSearchInfo1.getTier());
//      assertNull(dunsSearchInfo1.getRevenue());
//      assertNull(dunsSearchInfo1.getDuns());
//      assertNull(dunsSearchInfo1.getDunsInput());
//      
//      //Behavior testing : Adding verify calls
//      verify(dunsSearchInfo0,times(1)).setRevenue(anyString());
//      verify(dunsSearchInfo0,times(1)).setTier(anyShort());
//      verify(dunsSearchInfo0,times(1)).setUpdatedDate(any(java.util.Date.class));
//      verify(dunsSearchInfo0,times(1)).setDuns(anyString());
//      verify(dunsSearchInfo0,times(1)).setAssignedDate(any(java.util.Date.class));
//      verify(dunsSearchInfo0,times(1)).setCompanyName(anyString());
//  }
//
//    //**      Test case for path 1.2     //
//  @Test(expected = org.json.JSONException.class)
//  public void getSearchResultTest1()  throws Throwable  {
//      Base64.Encoder base64_Encoder0 = mock(Base64.Encoder.class);
//      PowerMockito.mockStatic(Base64.class);
//      PowerMockito.when(Base64.getEncoder()).thenReturn(base64_Encoder0);
//      
//      String string0 = "";
//      doReturn(string0).when(base64_Encoder0).encodeToString(any(byte[].class));
//      HttpEntity httpEntity0 = PowerMockito.mock(HttpEntity.class);
//      PowerMockito.whenNew(HttpEntity.class).withAnyArguments().thenReturn(httpEntity0);
//      
//      JSONObject jSONObject0 = PowerMockito.mock(JSONObject.class);
//      PowerMockito.whenNew(JSONObject.class).withAnyArguments().thenReturn(jSONObject0);
//      
//      doThrow(JSONException.class).when(jSONObject0).getString(anyString());
//      searchServiceImpl0.getSearchResult("22137");
//  }
//}
